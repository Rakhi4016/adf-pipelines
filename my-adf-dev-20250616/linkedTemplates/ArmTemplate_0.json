{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "my-adf-dev-20250616"
		},
		"AzureSqlLS_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlLS'"
		},
		"MySqlLS_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'MySqlLS'"
		},
		"AzureSqlLS_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "my-sql-dev.database.windows.net"
		},
		"AzureSqlLS_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "my-sql-dev"
		},
		"AzureSqlLS_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "rakesh4016"
		},
		"Blue_Ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://blueadlsdev.dfs.core.windows.net/"
		},
		"MySqlLS_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "localhost"
		},
		"MySqlLS_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "loyal_services"
		},
		"MySqlLS_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "root"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlLS_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlLS_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlLS_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlLS_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blue_Ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Blue_Ls_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/my-shir-06272025')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"table": {
						"value": "@concat('dbo.', dataset().p_table_name)",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_filelevel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Blue_Ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_container": {
						"type": "string"
					},
					"p_folder": {
						"type": "string"
					},
					"p_file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().p_folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().p_container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Blue_Ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_param_folderlevel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Blue_Ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_container": {
						"type": "string"
					},
					"p_folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().P_folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().p_container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Blue_Ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlLS_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlLS_properties_typeProperties_database')]",
					"username": "[parameters('MySqlLS_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlLS_password')]"
					},
					"driverVersion": "v2"
				},
				"connectVia": {
					"referenceName": "my-shir-06272025",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/my-shir-06272025')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/24hrscopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_param_folderlevel",
								"type": "DatasetReference",
								"parameters": {
									"p_container": "source",
									"p_folder": "raw_gold_data"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": {
									"value": "@addDays(utcNow(),-1)",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_filelevel",
											"type": "DatasetReference",
											"parameters": {
												"p_container": "source",
												"p_folder": "raw_gold_data",
												"p_file": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_filelevel",
											"type": "DatasetReference",
											"parameters": {
												"p_container": "destination",
												"p_folder": "raw_gold_data",
												"p_file": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-17T22:55:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_param_folderlevel')]",
				"[concat(variables('factoryId'), '/datasets/ds_filelevel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CountOfFilesInFolder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_param_folderlevel",
								"type": "DatasetReference",
								"parameters": {
									"p_container": "source",
									"p_folder": "raw_gold_data"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var",
							"value": {
								"value": "@length(activity('Get Metadata1').output.childItems)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"var": {
						"type": "Integer"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-19T19:56:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_param_folderlevel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteFile7days')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_param_folderlevel",
								"type": "DatasetReference",
								"parameters": {
									"p_container": "source",
									"p_folder": "raw_gold_data"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get Metadata2",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_filelevel",
											"type": "DatasetReference",
											"parameters": {
												"p_container": "source",
												"p_folder": "raw_gold_data",
												"p_file": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('Get Metadata2').output.lastModified,addDays(utcNow(),pipeline().parameters.p_last_7Days))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Delete1",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "ds_filelevel",
														"type": "DatasetReference",
														"parameters": {
															"p_container": "source",
															"p_folder": "raw_gold_data",
															"p_file": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_last_7Days": {
						"type": "int",
						"defaultValue": -7
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-19T19:56:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_param_folderlevel')]",
				"[concat(variables('factoryId'), '/datasets/ds_filelevel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SchemaMatch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_param_folderlevel",
								"type": "DatasetReference",
								"parameters": {
									"p_container": "source",
									"p_folder": "raw_gold_data"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"dataset": {
											"referenceName": "ds_filelevel",
											"type": "DatasetReference",
											"parameters": {
												"p_container": "source",
												"p_folder": "raw_gold_data",
												"p_file": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('Lookup1').output",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Copy data1",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_filelevel",
														"type": "DatasetReference",
														"parameters": {
															"p_container": "source",
															"p_folder": "raw_gold_data",
															"p_file": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_filelevel",
														"type": "DatasetReference",
														"parameters": {
															"p_container": "destination",
															"p_folder": "raw_gold_data",
															"p_file": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_resevere": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "Country",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Country",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "2020",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "2020",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "2021",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "2021",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "2022",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "2022",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "2023",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "2023",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Average gold reserves",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Average gold reserves",
										"type": "String",
										"physicalType": "String"
									}
								}
							],
							"typeConversion": true,
							"typeConversionSettings": {
								"allowDataTruncation": true,
								"treatBooleanAsNumber": false
							}
						}
					},
					"p_demand": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "Country",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Country",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "2020",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "2020",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "2021",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "2021",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "2022",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "2022",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "2023",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "2023",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "Average gold reserves",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "Average gold reserves",
										"type": "String",
										"physicalType": "String"
									}
								}
							],
							"typeConversion": true,
							"typeConversionSettings": {
								"allowDataTruncation": true,
								"treatBooleanAsNumber": false
							}
						}
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-19T19:56:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_param_folderlevel')]",
				"[concat(variables('factoryId'), '/datasets/ds_filelevel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceSinkMatch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceMetadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_param_folderlevel",
								"type": "DatasetReference",
								"parameters": {
									"p_container": "source",
									"p_folder": "raw_gold_data"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "GetSinkMetadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_param_folderlevel",
								"type": "DatasetReference",
								"parameters": {
									"p_container": "source",
									"p_folder": "raw_gold_data"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "FilterMissing",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetSourceMetadata",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetSinkMetadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetSourceMetadata').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@not(contains(activity('GetSinkMetadata').output.childItems, item()))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterMissing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterMissing').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_filelevel",
											"type": "DatasetReference",
											"parameters": {
												"p_container": "source",
												"p_folder": "raw_gold_data",
												"p_file": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_filelevel",
											"type": "DatasetReference",
											"parameters": {
												"p_container": "destination",
												"p_folder": "raw_gold_data",
												"p_file": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-17T22:55:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_param_folderlevel')]",
				"[concat(variables('factoryId'), '/datasets/ds_filelevel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/incremental_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_param_folderlevel",
								"type": "DatasetReference",
								"parameters": {
									"p_container": "source",
									"p_folder": "raw_gold_data"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get Metadata2",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_filelevel",
											"type": "DatasetReference",
											"parameters": {
												"p_container": "source",
												"p_folder": "raw_gold_data",
												"p_file": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@less(formatDatetime(variables('temp_max_vlaue'), 'yyyyMMddHHmmss'),formatDateTime(activity('Get Metadata2').output.lastModified, 'yyyyMMddHHmmss'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Set variable2",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "temp_max_vlaue",
													"value": {
														"value": "@activity('Get Metadata2').output.lastModified",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@variables('max_vlaue')",
										"type": "Expression"
									},
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_param_folderlevel",
								"type": "DatasetReference",
								"parameters": {
									"p_container": "source",
									"p_folder": "raw_gold_data"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_param_folderlevel",
								"type": "DatasetReference",
								"parameters": {
									"p_container": "destination",
									"p_folder": "raw_gold_data"
								}
							}
						]
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "max_vlaue",
							"value": {
								"value": "@variables('temp_max_vlaue')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"temp_max_vlaue": {
						"type": "String",
						"defaultValue": "2000-03-31T17:19:21Z"
					},
					"max_vlaue": {
						"type": "String",
						"defaultValue": "2000-03-31T17:19:21Z"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-17T14:53:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_param_folderlevel')]",
				"[concat(variables('factoryId'), '/datasets/ds_filelevel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().p_table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onperm_to_cloud_incremental')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.table_list",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "lkp_audit",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat(\n  'SELECT TOP 1 * FROM dbo.etl_audit ',\n  'WHERE table_name = ''', item().name, ''' ',\n  'ORDER BY last_run_timestamp DESC'\n)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSqlDS",
											"type": "DatasetReference",
											"parameters": {
												"p_table_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "lkp_audit",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('lkp_audit').output.firstRow.load_type, 'full')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "copy_incremental_load",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "MySqlSource",
														"query": {
															"value": "@concat(\n  'SELECT * FROM ', item().name, \n  ' WHERE ', activity('lkp_audit').output.firstRow.date_column,\n  ' > ''', activity('lkp_audit').output.firstRow.last_loaded_at, ''''\n)",
															"type": "Expression"
														}
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"logSettings": {
														"enableCopyActivityLog": true,
														"copyActivityLogSettings": {
															"logLevel": "Warning",
															"enableReliableLogging": false
														},
														"logLocationSettings": {
															"linkedServiceName": {
																"referenceName": "Blue_Ls",
																"type": "LinkedServiceReference"
															},
															"path": "source"
														}
													},
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "MySqlDS",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "AzureSqlDS",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "copy_full_data",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "MySqlSource"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"logSettings": {
														"enableCopyActivityLog": true,
														"copyActivityLogSettings": {
															"logLevel": "Warning",
															"enableReliableLogging": false
														},
														"logLocationSettings": {
															"linkedServiceName": {
																"referenceName": "Blue_Ls",
																"type": "LinkedServiceReference"
															},
															"path": "source"
														}
													},
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "MySqlDS",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "AzureSqlDS",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "get_max_date",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "If Condition1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat(\n  'SELECT ',\n    if(\n      equals(activity('lkp_audit').output.firstRow.load_type, 'incremental'),\n      concat('MAX(', activity('lkp_audit').output.firstRow.date_column, ') AS max_date '),\n      'CAST(NULL AS DATETIME) AS max_date '\n    ),\n  'FROM [dbo.', item().name, ']'\n)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSqlDS",
											"type": "DatasetReference",
											"parameters": {
												"p_table_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "Script1",
									"description": "",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "get_max_date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlLS",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat(\n  'INSERT INTO dbo.etl_audit (table_name, date_column, load_type, last_loaded_at, last_run_status, last_run_row_count, last_run_timestamp) VALUES (''',\n  item().name, ''', ''',\n  activity('lkp_audit').output.firstRow.date_column, ''', ''',\n  activity('lkp_audit').output.firstRow.load_type, ''', ',\n  \n  \n  if(\n    equals(activity('lkp_audit').output.firstRow.load_type, 'full'),\n    'null',\n    concat('''', activity('get_max_date').output.firstRow.max_date, '''')\n  ), ', ''Success'', ',\n  \n  \n  if(\n    equals(activity('lkp_audit').output.firstRow.load_type, 'full'),\n    activity('copy_full_data').output.rowsCopied,\n    activity('copy_incremental_load').output.rowsCopied\n  ), ', GETDATE());'\n)",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "latest_log_entry",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Script1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "latest_log_entry",
										"value": {
											"value": "@concat(\n   '\\nTable: ', item().name,\n   '\\nType: ', activity('lkp_audit').output.firstRow.load_type,\n   '\\nRows: ',\n     if(equals(activity('lkp_audit').output.firstRow.load_type, 'incremental'),\n        string(activity('copy_incremental_load').output.rowsCopied),\n        string(activity('copy_full_data').output.rowsCopied)\n     ),\n   '\\n----------'\n)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Append variable1",
									"type": "AppendVariable",
									"dependsOn": [
										{
											"activity": "latest_log_entry",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "log_text",
										"value": {
											"value": "variables('latest_log_entry')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "log_text_string",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-06.eastus.logic.azure.com:443/workflows/04b525d85aef4d7eb6d37e42ea7968b0/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=GlSGcgxaenyKqxoj36UJxw35PHKY_S7-7RW1eez861M",
							"body": {
								"value": "@concat('{',\n  '\"pipelineName\":\"', pipeline().Pipeline, '\",',\n  '\"runId\":\"', pipeline().RunId, '\",',\n  '\"log_text\":\"', variables('log_text_string'), '\"',\n'}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "log_text_string",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "log_text_string",
							"value": {
								"value": "@join(variables('log_text'), '\\n')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"table_list": {
						"type": "array",
						"defaultValue": [
							{
								"name": "customers"
							},
							{
								"name": "orders"
							},
							{
								"name": "order_items"
							},
							{
								"name": "payments"
							},
							{
								"name": "products"
							}
						]
					}
				},
				"variables": {
					"latest_log_entry": {
						"type": "String",
						"defaultValue": "''"
					},
					"log_text": {
						"type": "Array",
						"defaultValue": []
					},
					"log_text_string": {
						"type": "String",
						"defaultValue": "''"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlDS')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlLS')]",
				"[concat(variables('factoryId'), '/datasets/MySqlDS')]",
				"[concat(variables('factoryId'), '/linkedServices/Blue_Ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onperm_to_cloud_incremental_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.table_list",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "lkp_audit",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat(\n  'SELECT TOP 1 * FROM dbo.etl_audit ',\n  'WHERE table_name = ''', item().name, ''' ',\n  'ORDER BY last_run_timestamp DESC'\n)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSqlDS",
											"type": "DatasetReference",
											"parameters": {
												"p_table_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "lkp_audit",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('lkp_audit').output.firstRow.load_type, 'full')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "copy_incremental_load",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "MySqlSource",
														"query": {
															"value": "@concat(\n  'SELECT * FROM ', item().name, \n  ' WHERE ', activity('lkp_audit').output.firstRow.date_column,\n  ' > ''', activity('lkp_audit').output.firstRow.last_loaded_at, ''''\n)",
															"type": "Expression"
														}
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"logSettings": {
														"enableCopyActivityLog": true,
														"copyActivityLogSettings": {
															"logLevel": "Warning",
															"enableReliableLogging": false
														},
														"logLocationSettings": {
															"linkedServiceName": {
																"referenceName": "Blue_Ls",
																"type": "LinkedServiceReference"
															},
															"path": "source"
														}
													},
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "MySqlDS",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "AzureSqlDS",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "copy_full_data",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "MySqlSource"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"logSettings": {
														"enableCopyActivityLog": true,
														"copyActivityLogSettings": {
															"logLevel": "Warning",
															"enableReliableLogging": false
														},
														"logLocationSettings": {
															"linkedServiceName": {
																"referenceName": "Blue_Ls",
																"type": "LinkedServiceReference"
															},
															"path": "source"
														}
													},
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "MySqlDS",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "AzureSqlDS",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "get_max_date",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "If Condition1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat(\n  'SELECT ',\n    if(\n      equals(activity('lkp_audit').output.firstRow.load_type, 'incremental'),\n      concat('MAX(', activity('lkp_audit').output.firstRow.date_column, ') AS max_date '),\n      'CAST(NULL AS DATETIME) AS max_date '\n    ),\n  'FROM [dbo.', item().name, ']'\n)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSqlDS",
											"type": "DatasetReference",
											"parameters": {
												"p_table_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "Script1",
									"description": "",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "get_max_date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlLS",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat(\n  'INSERT INTO dbo.etl_audit (table_name, date_column, load_type, last_loaded_at, last_run_status, last_run_row_count, last_run_timestamp) VALUES (''',\n  item().name, ''', ''',\n  activity('lkp_audit').output.firstRow.date_column, ''', ''',\n  activity('lkp_audit').output.firstRow.load_type, ''', ',\n  \n  \n  if(\n    equals(activity('lkp_audit').output.firstRow.load_type, 'full'),\n    'null',\n    concat('''', activity('get_max_date').output.firstRow.max_date, '''')\n  ), ', ''Success'', ',\n  \n  \n  if(\n    equals(activity('lkp_audit').output.firstRow.load_type, 'full'),\n    activity('copy_full_data').output.rowsCopied,\n    activity('copy_incremental_load').output.rowsCopied\n  ), ', GETDATE());'\n)",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"table_list": {
						"type": "array",
						"defaultValue": [
							{
								"name": "customers"
							},
							{
								"name": "orders"
							},
							{
								"name": "order_items"
							},
							{
								"name": "payments"
							},
							{
								"name": "products"
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlDS')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlLS')]",
				"[concat(variables('factoryId'), '/datasets/MySqlDS')]",
				"[concat(variables('factoryId'), '/linkedServices/Blue_Ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onperm_to_cloud_incremental_main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.table_list",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "lkp_audit",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat(\n  'SELECT TOP 1 * FROM dbo.etl_audit ',\n  'WHERE table_name = ''', item().name, ''' ',\n  'ORDER BY last_run_timestamp DESC'\n)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSqlDS",
											"type": "DatasetReference",
											"parameters": {
												"p_table_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "lkp_audit",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('lkp_audit').output.firstRow.load_type, 'full')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "copy_incremental_load",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "MySqlSource",
														"query": {
															"value": "@concat(\n  'SELECT * FROM ', item().name, \n  ' WHERE ', activity('lkp_audit').output.firstRow.date_column,\n  ' > ''', activity('lkp_audit').output.firstRow.last_loaded_at, ''''\n)",
															"type": "Expression"
														}
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"logSettings": {
														"enableCopyActivityLog": true,
														"copyActivityLogSettings": {
															"logLevel": "Warning",
															"enableReliableLogging": false
														},
														"logLocationSettings": {
															"linkedServiceName": {
																"referenceName": "Blue_Ls",
																"type": "LinkedServiceReference"
															},
															"path": "source"
														}
													},
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "MySqlDS",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "AzureSqlDS",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "copy_full_data",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "MySqlSource"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"logSettings": {
														"enableCopyActivityLog": true,
														"copyActivityLogSettings": {
															"logLevel": "Warning",
															"enableReliableLogging": false
														},
														"logLocationSettings": {
															"linkedServiceName": {
																"referenceName": "Blue_Ls",
																"type": "LinkedServiceReference"
															},
															"path": "source"
														}
													},
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "MySqlDS",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "AzureSqlDS",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "get_max_date",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "If Condition1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat(\n  'SELECT ',\n    if(\n      equals(activity('lkp_audit').output.firstRow.load_type, 'incremental'),\n      concat('MAX(', activity('lkp_audit').output.firstRow.date_column, ') AS max_date '),\n      'CAST(NULL AS DATETIME) AS max_date '\n    ),\n  'FROM [dbo.', item().name, ']'\n)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSqlDS",
											"type": "DatasetReference",
											"parameters": {
												"p_table_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "Script1",
									"description": "",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "get_max_date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlLS",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat(\n  'INSERT INTO dbo.etl_audit (table_name, date_column, load_type, last_loaded_at, last_run_status, last_run_row_count, last_run_timestamp) VALUES (''',\n  item().name, ''', ''',\n  activity('lkp_audit').output.firstRow.date_column, ''', ''',\n  activity('lkp_audit').output.firstRow.load_type, ''', ',\n  \n  \n  if(\n    equals(activity('lkp_audit').output.firstRow.load_type, 'full'),\n    'null',\n    concat('''', activity('get_max_date').output.firstRow.max_date, '''')\n  ), ', ''Success'', ',\n  \n  \n  if(\n    equals(activity('lkp_audit').output.firstRow.load_type, 'full'),\n    activity('copy_full_data').output.rowsCopied,\n    activity('copy_incremental_load').output.rowsCopied\n  ), ', GETDATE());'\n)",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Append_Table_Log",
									"type": "AppendVariable",
									"dependsOn": [
										{
											"activity": "Script1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "log_text",
										"value": {
											"value": "@concat(\n   'Table: ', item().name,\n   '\\nType: ', activity('lkp_audit').output.firstRow.load_type,\n   '\\nRows: ',\n     if(equals(activity('lkp_audit').output.firstRow.load_type, 'incremental'),\n        string(activity('copy_incremental_load').output.rowsCopied),\n        string(activity('copy_full_data').output.rowsCopied)\n     ),\n   '\\n----------'\n)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "log_text_string",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-06.eastus.logic.azure.com:443/workflows/04b525d85aef4d7eb6d37e42ea7968b0/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=GlSGcgxaenyKqxoj36UJxw35PHKY_S7-7RW1eez861M",
							"body": {
								"value": "@concat('{',\n  '\"pipelineName\":\"', pipeline().Pipeline, '\",',\n  '\"runId\":\"', pipeline().RunId, '\",',\n  '\"log_text\":\"', variables('log_text_string'), '\"',\n'}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "log_text_string",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "log_text_string",
							"value": {
								"value": "@join(variables('log_text'), '\\n')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"table_list": {
						"type": "array",
						"defaultValue": [
							{
								"name": "customers"
							},
							{
								"name": "orders"
							},
							{
								"name": "order_items"
							},
							{
								"name": "payments"
							},
							{
								"name": "products"
							}
						]
					}
				},
				"variables": {
					"log_text": {
						"type": "Array",
						"defaultValue": []
					},
					"log_text_string": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlDS')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlLS')]",
				"[concat(variables('factoryId'), '/datasets/MySqlDS')]",
				"[concat(variables('factoryId'), '/linkedServices/Blue_Ls')]"
			]
		}
	]
}